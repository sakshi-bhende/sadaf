qwdqwtoday


1] command to print lines/etc/passwd file
writye the output of ls command to files.txt
change the permission of files.txt to allow inly user to read and write nut group can read ,write and execute  also .
create a new user "dac2"\
change the group of file "file.txt" to dac2
Print lines from /etc/passwd file:

bash
Copy code
cat /etc/passwd
Write the output of ls command to files.txt:

bash
Copy code
ls > files.txt
Change the permission of files.txt to allow only user to read/write but group can read, write, and execute:

bash
Copy code
chmod 760 files.txt
Explanation:

7 = User can read (4), write (2), and execute (1).
6 = Group can read (4) and write (2).
0 = Others have no permissions.
Create a new user dac2:

bash
Copy code
sudo useradd dac2
Change the group of the file files.txt to dac2:

bash
Copy code
sudo chgrp dac2 files.txt
2.write a bsh script to find given directory exitsts or not ar any path .if not exits create it.take directory from user
#!/bin/bash

# Prompt the user to enter a directory path
read -p "Enter the directory path: " dir_path

# Check if the directory exists
if [ -d "$dir_path" ]; then
    echo "The directory '$dir_path' already exists."
else
    # Create the directory
    mkdir -p "$dir_path"
    echo "The directory '$dir_path' has been created."
fi


3write a program  to find the largest 4 digit number divisible by 10 and 13
public class LargestNumberDivisibleBy10And13 {
    public static void main(String[] args) {
        int largestFourDigitNumber = 9999;

        // Loop to find the largest 4-digit number divisible by 10 and 13
        while (largestFourDigitNumber % 10 != 0 || largestFourDigitNumber % 13 != 0) {
            largestFourDigitNumber--;
        }

        System.out.println("The largest 4-digit number divisible by both 10 and 13 is: " + largestFourDigitNumber);
    }
}

create git project 
--------------------------------
Steps to create a git project 
git init
git remote add origin url
git add . 
git commit -m"first commit"
git push -u origin master
-------------------------------------------

write a dockerfile to execute ] PROGRA IN CONATINER
----------------------------------------------------------
# Use a base image with OpenJDK
FROM openjdk:17-jdk-alpine

# Set the working directory inside the container
WORKDIR /app

# Copy the Java program to the working directory
COPY LargestNumberDivisibleBy10And13.java .

# Compile the Java program
RUN javac LargestNumberDivisibleBy10And13.java

# Specify the command to run the compiled Java program
CMD ["java", "LargestNumberDivisibleBy10And13"]
---------------------------------------------------------
Update kro question jldi

4 ] write selenium script to automate "the selenium simplified search engine"
1]open https://testpages.eviltester.com/styled/search
2] enter any string in search box
3]
verify the result(only first bullet on result)

create new maven prohecr in Jenkins and execute the job with goal "clean test"

Q4 karo
testclass.java  file ka code bhejo
ha krra zip bhej ra puri
--------------------
package com.cdac.acts;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.testng.annotations.AfterTest;
import org.testng.annotations.BeforeTest;
import org.testng.annotations.Test;

public class TestClass {
	WebDriver driver;
	@BeforeTest
    public void profileSetup()
    {	
		 driver = new ChromeDriver();
		driver.get("https://testpages.eviltester.com/styled/search");
        driver.manage().window().maximize();
        
        
    }
	@Test
    public void textBoxTest1() throws InterruptedException
    {
		driver.get("https://testpages.eviltester.com/styled/search");
		 driver.findElement(By.xpath("//input[@name='q']")).clear();
		 driver.findElement(By.xpath("//input[@name='q']")).sendKeys("Selenium");
		
	     driver.findElement(By.xpath("//input[@name='q']")).submit();
	   

    }
	 @AfterTest
	    public void tearDown() {
	        // Close the browser after the test
	        if (driver != null) {
	            driver.quit();
	        }
	    }
}


